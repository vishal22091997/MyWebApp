/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M21
 * Generated at: 2017-05-25 07:34:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html >\n");
      out.write("<head>\n");
      out.write("  <meta charset=\"UTF-8\">\n");
      out.write("  <title>Day 001 Login Form</title>\n");
      out.write("  \n");
      out.write("  \n");
      out.write("  <link rel='stylesheet prefetch' href='https://fonts.googleapis.com/css?family=Open+Sans:600'>\n");
      out.write(" <script src=\"https://apis.google.com/js/platform.js\" async defer></script>\n");
      out.write("  \n");
      out.write(" <meta name=\"google-signin-client_id\" content=\"372475238802-l5mefq2g0mub1gmsna523i38o52c2900.apps.googleusercontent.com\">\n");
      out.write(" \n");
      out.write("      <link rel=\"stylesheet\" href=\"css/style.css\">\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\tfunction SignIn(googleUser) {\n");
      out.write("\t\t  var profile = googleUser.getBasicProfile();\n");
      out.write("\t\t  console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\n");
      out.write("\t\t  console.log('Name: ' + profile.getName());\n");
      out.write("\t\t  console.log('Image URL: ' + profile.getImageUrl());\n");
      out.write("\t\t  console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.\n");
      out.write("\t\t  \n");
      out.write("\t\t var username = document.getElementById('user2');\n");
      out.write("\t\t username.value = profile.getEmail();\n");
      out.write("\t\t var email = document.getElementById('email');\n");
      out.write("\t\temail.value = profile.getEmail();\n");
      out.write("\t\tusername.setAttribute(\"disabled\", true);\n");
      out.write("\t\temail.setAttribute(\"disabled\", true);\t\n");
      out.write("\t\t  \n");
      out.write("\t\t}\n");
      out.write("\t</script>\n");
      out.write("  \n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("  <div class=\"login-wrap\">\n");
      out.write("\t<div class=\"login-html\">\n");
      out.write("\t\t<input id=\"tab-1\" type=\"radio\" name=\"tab\" class=\"sign-in\" checked><label for=\"tab-1\" class=\"tab\">Sign In</label>\n");
      out.write("\t\t<input id=\"tab-2\" type=\"radio\" name=\"tab\" class=\"sign-up\"><label for=\"tab-2\" class=\"tab\">Sign Up</label>\n");
      out.write("\t\t<div class=\"login-form\">\n");
      out.write("\t\t\t<div class=\"sign-in-htm\">\n");
      out.write("\t\t\t\t<div class=\"group\">\n");
      out.write("\t\t\t\t\t<label for=\"user\" class=\"label\">Username</label>\n");
      out.write("\t\t\t\t\t<input id=\"user\" type=\"text\" class=\"input\">\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"group\">\n");
      out.write("\t\t\t\t\t<label for=\"pass\" class=\"label\">Password</label>\n");
      out.write("\t\t\t\t\t<input id=\"pass\" type=\"password\" class=\"input\" data-type=\"password\">\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"group\">\n");
      out.write("\t\t\t\t\t<input id=\"check\" type=\"checkbox\" class=\"check\" checked>\n");
      out.write("\t\t\t\t\t<label for=\"check\"><span class=\"icon\"></span> Keep me Signed in</label>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"group\">\n");
      out.write("\t\t\t\t\t<input type=\"submit\" class=\"button\" value=\"Sign In\">\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"hr\"></div>\n");
      out.write("\t\t\t\t<div class=\"foot-lnk\">\n");
      out.write("\t\t\t\t\t<a href=\"#forgot\">Forgot Password?</a>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"sign-up-htm\">\n");
      out.write("\t\t\t\t<div class=\"group\">\n");
      out.write("\t\t\t\t\t<label for=\"user\" class=\"label\">Username</label>\n");
      out.write("\t\t\t\t\t<input id=\"user2\" type=\"text\" class=\"input\" >\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"group\">\n");
      out.write("\t\t\t\t\t<label for=\"pass\" class=\"label\">Password</label>\n");
      out.write("\t\t\t\t\t<input id=\"pass\" type=\"password\" class=\"input\" data-type=\"password\">\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"group\">\n");
      out.write("\t\t\t\t\t<label for=\"pass\" class=\"label\">Repeat Password</label>\n");
      out.write("\t\t\t\t\t<input id=\"pass\" type=\"password\" class=\"input\" data-type=\"password\">\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"group\">\n");
      out.write("\t\t\t\t\t<label for=\"pass\" class=\"label\">Email Address</label>\n");
      out.write("\t\t\t\t\t<input id=\"email\" type=\"text\" class=\"input\">\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"group\">\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t\t \t<div class=\"g-signin2\" data-onsuccess=\"SignIn\" style=\"width:100%\">\n");
      out.write("<button class=\"button\" style=\"vertical-align:middle\"><span>Hover </span></button></div>\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t<div class=\"group\">\n");
      out.write("\t\t\t\t\t<input type=\"submit\" class=\"button\" value=\"Sign Up\">\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"hr\"></div>\n");
      out.write("\t\t\t\t<div class=\"foot-lnk\">\n");
      out.write("\t\t\t\t\t<label for=\"tab-1\">Already Member?</a>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("</div>\n");
      out.write("  \n");
      out.write("  \n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
